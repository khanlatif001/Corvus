================================================================================




                                     Corvus                                     

                  Property-driven Scientific Workflow Manager                   

                                  Version: 1.0                                  

                          Web: http://feffproject.org                           
                              E-mail: feff@uw.edu                               


          S. Story, F. D. Vila, J. J. Kas, S. D. Pemmaraju, J. J. Rehr          


================================================================================

Copyright (c) 2021 S. Story, F. D. Vila, J. J. Kas, S. D. Pemmaraju, J. J. Rehr

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation and/or
other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors
may be used to endorse or promote products derived from this software without
specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

================================================================================

Introduction

Corvus is a Python package designed for managing workflows of physical
simulations that span multiple scientific codes. It is intended to accommodate a
spectrum of users. At one end, a beginner user only interested in running a
specific type of calculation can be provided with a pre-built workflow and
concern themselves only with modifying their input; at the other end, an expert
user can utilize the internal tools to build their own custom scientific
workflows. The Python language allows us to provide a tool that can act as an
executable program and an accessible library, satisfying either type of user.

Corvus primary goal, is to provide a tool that does not require users to develop
their own workflows. To this end, Corvus is a general software framework aimed
at a broad user base that enables the development of scientific workflows,
with particular focus on the interfacing of non-databound, computationally
intensive, heterogeneous scientific codes.

Corvus philosophy:

General: The Corvus framework is able to encode a broad range of scientific
workflows. It abstracts as many operations as possible into reusable modules
(Handlers) that can be interconnected by means of data-sharing.

Intelligent: The Corvus framework is capable of making intelligent decisions and
checks, thus reducing the burden on beginner users. Workflows are built solely
from established input dependencies of the supported scientific codes.

Extensible: The Corvus framework supports growth through modularity, connecting
parts requiring minimal interfacing. This allows developers to build certain
sections without affecting others.

Sustainable: Corvus development is hosted on GitHub, thus facilitating
collaboration between developers. To maximize sustainability, Corvus is divided
into two layers: A high-level layer containing the highly-abstracted operations,
and a low-level one that localizes the code-dependence.

Portable: Given that it is developed in Python, Corvus is, for the most part,
platform-independent. Platform dependence is localized at or below the point of
contact between the Corvus framework and the codes that it interconnects. This
means that only the external executables and the way they are executed depend on
the platform.

Easy for users: The input syntax in Corvus is as independent from the
interconnected codes as possible, unifying properties and parameters that are
common to many codes. The input is heavily biased towards "physical", easy to
understand input parameters. It minimizes the need to input "expert" control
parameters by aggressively using defaults and smart automated decision making.

Easy for developers: The separation of the framework into high- and low-level
layers facilitates development for both core framework developers as well as
casual developers that want to extend the capabilities of the framework to new
workflows.

Corvus Structure

Corvus is designed around two main layers: (1) a top level infrastructure that
interacts with the user and executes the various steps defined in the workflow,
and (2) lower level code that interacts with the external scientific software to
produce the desired output that is then translated into the physical properties
required by the workflow. This stratification allows Corvus to separate the
implementation details specific to each external software package from the
general workflow controls, to permit generic and modular workflow structures
that can handle a wide variety of calculations. 

Corvus relies on workflows consisting of a sequence of modular steps, each
providing part of the information needed to compute a desired physical property.
These individual steps, or "Exchanges", take a set of input properties, pass it
down to external programs which then pass newly calculated output properties
back up to a central "System" database. The code that deals with the external
software is separated into independent components, or "Handlers", that are
specific to each external scientific program.


================================================================================

How to obtain Corvus

Users of Corvus can find installers for the most recent release at:
https://github.com/times-software/Corvus/releases/latest

Alternatively, developers can get access to Corvus by cloning its GitHub repo
with

git clone https://github.com/times-software/Corvus.git


Developers: How to install Corvus


To install Corvus follow these steps:

1) After downloading the code, change to the Corvus directory.


2) Use the Python setup utility do:

	python -m pip install --prefix=/path/to/corvus

where "/path/to/corvus" is the path where the scripts, modules, examples and
documentation will be installed. If you are using anaconda python, and have 
an activated environment, you can leave the --prefix=... off of the above 
command and skip sections 3 and 4. 

3) To make Corvus visible to Python, add the

/path/to/corvus/lib/python3.x/site-packages

value to the Python path in the appropriate way for the target system. If you

4) In the same way, add the

/path/to/corvus/bin

directory to the systems executable path. This makes the "run-corvus" script
visible throughout the system.

================================================================================

Input Structure

The input of Corvus is very simple: All input variables (i.e. tokens) have the
following possible structures:

################################################################################
! comment
token1 {value} # comment
token2 {value value value}
token3 {
        value  # comment
        value  ! comment
       }
token4  value
################################################################################

Each token can be followed by a single value, or by a group of values enclosed
in curly brackets. Any input in a line after the "!" or "#" characters is
considered a comment.

Depending on the input variable, the values must have the following possible
types:

Integer: Any integer number, for example, 42, -10, 0, 1

Float:   Any real number, for example, -10.0, 20.5, -1.0e+10

Boolean: A logical value with the possible values of 0, 1, True, False, .true.,
         .false., T and F

String:  A string is a collection of alphanumeric characters without any spaces,
	 basically any other value that is not an Integer, Float or Boolean.

In addition to these types, Corvus has two other possible types that are
important for developers as they affect the internal handling of the data:

Auto:    This type indicates that Corvus will attempt to determine the type of
         the data automatically.

Pass:    The data is passed to the Handlers "as is" (i.e. as a string with
	 exactly the same formatting that is put between the curly brackets).


The following are all the currently available input variables in Corvus.

                            General Input Variables                             
--------------------------------------------------------------------------------
absorbing_atom:

Description:
 Index of the absorbing atom for core spectroscopies such as XANES, EXAFS and
 XES.

Format:
absorbing_atom {
 Integer ...
}

Default:
None

--------------------------------------------------------------------------------
absorbing_atom_type:

Description:
 Symbol of atom you would like to calculate the XANES for. Will loop over symmetry unique sites.

Format:
absorbing_atom_type {
 String ...
}

Default:
None

--------------------------------------------------------------------------------
cell_angles_abc:

Description:
 Scaling of the a, b an c axes of the simulation cell, in Angstroms.

Format:
cell_angles_abc {
 Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
cell_scaling_abc:

Description:
 Scaling of the a, b an c axes of the simulation cell, in Angstroms.

Format:
cell_scaling_abc {
 Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
cell_scaling_iso:

Description:
 Unitless isotropic scaling of the unit cell.

Format:
cell_scaling_iso {
 Float
}

Default:
cell_scaling_iso {
1.0
}

--------------------------------------------------------------------------------
cell_struc_opt_flags:

Description:
 Toggle the optimization of the x, y and z coordinates of each atom in the
 system.

Format:
cell_struc_opt_flags {
 Boolean Boolean Boolean
 ...
}

Default:
None

--------------------------------------------------------------------------------
cell_struc_xyz_red:

Description:
 Structure of the simulation cell in reduced coordinates if the system is
 extended and has periodic boundary conditions.

Format:
cell_struc_xyz_red {
 String Float Float Float
 ...
}

Default:
None

--------------------------------------------------------------------------------
cell_vectors:

Description:
 Normalized simulation cell vector directions. These vectors are scaled using
 the "cell_scaling_iso" and "cell_scaling_abc" input variables to generate the
 simulation cell.

Format:
cell_vectors {
 Float Float Float
 Float Float Float
 Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
charge:

Description:
 Net charge of the system.

Format:
charge {
 Integer
}

Default:
charge {
0
}

--------------------------------------------------------------------------------
cif_input:

Description:
 cif input file name.

Format:
cif_input {
 String
}

Default:
None

--------------------------------------------------------------------------------
cluster:

Description:
 Structure of the system is the system is not extended (i. e. is a molecule or
 cluster). The coordinates are in Angstroms.

Format:
cluster {
 String Float Float Float
 ...
}

Default:
None

--------------------------------------------------------------------------------
constant_volume:

Description:
 Keep the simulation cell volume constant in cell optimizations.

Format:
constant_volume {
 Boolean
}

Default:
constant_volume {
True
}

--------------------------------------------------------------------------------
debyetemp:

Description:

 debyetemp
 {
 temp

 Specify the Debye Model temperature (in K) for the calculation of EXAFS DW
 factors.

Format:
debyetemp {
 Float
}

Default:
None

--------------------------------------------------------------------------------
dmdw.ioflag:

Description:
 Set the amount of output printed by DMDW. Possible values are:
   0: Terse, prints out only the desired result (s^2, u^2, etc).
   1: Verbose, prints out the pole frequencies and weights, as well as
      estimates of the Einstein temperatures for each path.
 Please refer to the DMDW section of the Feff manual for further details.

 NOTE: The current format described below is temporary for compatibility with
 previous versions of Corvus. This will be changed to "Integer" in the future.

Format:
dmdw.ioflag {
 Pass
}

Default:
None

--------------------------------------------------------------------------------
dmdw.nlanc:

Description:
 Set the number of Lanczos poles (i. e. iterations) in DMDW. Larger values
 usually improve convergence of the target quantity. However, the number of
 poles should not exceed the dimensions of the subspace spanned by the
 projection of the path into the appropriate eigenmodes of the Hessian. This
 means that this variable should always be less than 3*N-6, where N is the
 number of atoms in the system. In practice, a value of 6-8 is sufficient to
 obtain converged mean square relative displacements (MSRD, or s^2) for EXAFS.
 For crystallographic mean square displacements (MSD, or u^2) at least 16 poles
 are usually needed. Please refer to the DMDW section of the Feff manual for
 further details.

 NOTE: The current format described below is temporary for compatibility with
 previous versions of Corvus. This will be changed to "Integer" in the future.

Format:
dmdw.nlanc {
 Pass
}

Default:
None

--------------------------------------------------------------------------------
dmdw.paths:

Description:
 Set up the path descriptors that will generate the list of paths for which
 properties will be calculated. The list has the following form:
   <Number of descriptors>
     <Descriptor 1>
     <Descriptor 2>
    .
    .

 Each descriptor has the form:
   <Number of atoms in path> <Atom index 1> ... <Max. path length (Ang)>

 The atom indices can take the value 0 which acts as a wildcard for all atoms
 in the system.

 Examples:

 2
 2 1 0   3.0
 3 2 0 5 6.0

 This section defines 2 paths descriptors. The first one generates all paths
 with two atoms, starting in atom 1 and going to all other atoms in the
 systems, but subject to a maximum effective path length of 3.0 Ang. The
 second one generates all paths with three atoms, starting in atom 2 and
 ending in atom 5, while passing trhough all other atoms in the system, but
 with a maximum effective length of 6.0 Ang.
 Using the same syntax atoms can be selected to compute their u^2. For example
 the paths section

 1
 1 0 0.0

 will produce u^2 for all atoms in the system. Please refer to the DMDW
 section of the Feff manual for further details.

 NOTE: The current format described below is temporary for compatibility with
 previous versions of Corvus.

Format:
dmdw.paths {
 Pass
}

Default:
None

--------------------------------------------------------------------------------
dmdw.tempgrid:

Description:
 Set up the temperature grid to compute the thermal properties in DMDW. It has
 the following form:

   <Number of temperature> <Min. temp.> <Max. temp.>

 If the number of desired temperatures is just one, the maximum temperature
 input is not needed. Please refer to the DMDW section of the Feff manual for
 further details.

 NOTE: The current format described below is temporary for compatibility with
 previous versions of Corvus.

Format:
dmdw.tempgrid {
 Pass
}

Default:
None

--------------------------------------------------------------------------------
dmdw_nlanczos:

Description:

 dmdw_nlanczos
 {
 nLanczos_Interations

 Specify the number of Lanczos iterations to be done for the calculation of
 EXAFS DW factors with the dynamical matrix method.

Format:
dmdw_nlanczos {
 Integer
}

Default:
dmdw_nlanczos {
6
}

--------------------------------------------------------------------------------
ene_int:

Description:
No description available for this variable
Please contact the code developers

Format:
ene_int {
 Float
}

Default:
None

--------------------------------------------------------------------------------
fermi_shift:

Description:
 Shift of the fermi-energy in eV.

Format:
fermi_shift {
 Float
}

Default:
None

--------------------------------------------------------------------------------
ismetal:

Description:
 Toggle whether the system should be treated as a metal or as an insulator.

Format:
ismetal {
 Boolean
}

Default:
ismetal {
False
}

--------------------------------------------------------------------------------
keep_symm:

Description:
 Toggle the preservation of initial symmetry in optimizations.

Format:
keep_symm {
 Boolean
}

Default:
keep_symm {
True
}

--------------------------------------------------------------------------------
mac_diel_const:

Description:
 Approximate value of the macroscopic dielectric constant of the system used in
 some methods to accelerate convergence of the SCF cycle.

Format:
mac_diel_const {
 Float
}

Default:
None

--------------------------------------------------------------------------------
method:

Description:
 Method used to compute the target. This variable is somewhat context-dependent
 and is ccurrently not fully implemented.
 Current possible values are:
    dft, mp2, ccsd

Format:
method {
 String
}

Default:
method {
dft
}

--------------------------------------------------------------------------------
multiplicity:

Description:
 Multiplicity of the system.

Format:
multiplicity {
 Integer
}

Default:
multiplicity {
0
}

--------------------------------------------------------------------------------
nkpoints:

Description:
 Define the number of k-point in each direction of the grid for reciprocal
 space simulations.

Format:
nkpoints {
 Integer Integer Integer
}

Default:
nkpoints {
1 1 1
}

--------------------------------------------------------------------------------
nqpoints:

Description:
 Define the number of q-point perturbations in each direction of the grid for
 density functional perturbation theory (DFPT) simulations.

Format:
nqpoints {
 Integer Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
nuctemp:

Description:

 nuctemp
 {
 temp

 Specify the temperature (in K) for the nuclear motion (DW factors).

Format:
nuctemp {
 Float
}

Default:
nuctemp {
300.0
}

--------------------------------------------------------------------------------
number_of_atoms:

Description:
 Number of atoms in the system

Format:
number_of_atoms {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
opcons.usesaved:

Description:
 feff.opcons{ }
 Calculate loss function using an atomic approximation.

Format:
opcons.usesaved {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
pspfiles:

Description:
 List of pseudopotentials for each atom in the system. Each line contains
 the label for the atoms (usually the element % name) and the name of the file
 with the pseudopotential. The required format for the files will depend on the
 Handler used.

Format:
pspfiles {
 String String
 ...
}

Default:
None

--------------------------------------------------------------------------------
pw_encut:

Description:
 Planwave energy cutoff for reciprocal space simulations, in au.

Format:
pw_encut {
 Float
}

Default:
pw_encut {
15.0
}

--------------------------------------------------------------------------------
scf_conv:

Description:
 Convergence threshold for SCF cycles (HF, DFT, etc) in au. The value set by
 this variable might be internally overridden if the target requires tighter
 convergence settings.

Format:
scf_conv {
 Float
}

Default:
scf_conv {
1.0e-5
}

--------------------------------------------------------------------------------
scratch:

Description:
 Directory for disk scratch for those Handlers that require large amounts of
 disk. If the directory is not present or it can not be created, Corvus reverts
 to the default.
 NOTE: This input variable is not fully implemented yet.

Format:
scratch {
 String ...
}

Default:
scratch {
.
}

--------------------------------------------------------------------------------
species:

Description:
 chemical species and number of each species

Format:
species {
 String Integer
}

Default:
None

--------------------------------------------------------------------------------
spectralFunction_file:

Description:
 file to read spectral function from - 2 column file

Format:
spectralFunction_file {
 String
}

Default:
None

--------------------------------------------------------------------------------
spectral_broadening:

Description:
 Broadening used in some spectroscopic methods.

Format:
spectral_broadening {
 Float
}

Default:
None

--------------------------------------------------------------------------------
supercell.dimensions:

Description:
 supercell dimensions (number of cells in each direction).

Format:
supercell.dimensions {
 Integer Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
target_list:

Description:
 Space separated list with all the targets required for this calculation.

Format:
target_list {
 String ...
 ...
}

Default:
None

--------------------------------------------------------------------------------
title:

Description:
 Title of this calculation.

Format:
title {
 Pass
 ...
}

Default:
title {
This is a Corvus calculation
}

--------------------------------------------------------------------------------
usehandlers:

Description:
 Explicitely declare what Handlers are to be used in the generation of the
 Workflow. This helps the current simple Workflow generator when a given target
 is provided by more than one Handler.
 Current possible values are:
    Feff, FeffRixs, Dmdw, Abinit, Vasp, Nwchem, Orca

Format:
usehandlers {
 String ...
}

Default:
None

--------------------------------------------------------------------------------
xanes_file:

Description:
 file to read xanes from - 2 column file

Format:
xanes_file {
 String
}

Default:
None

--------------------------------------------------------------------------------
xc:

Description:
 Exchange-correlation functional to use if the "method" selected is "dft".
 Current possible values are:
    lda, pbe, b3lyp

Format:
xc {
 String
}

Default:
xc {
lda
}

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

                         Abinit Handler Input Variables                         
--------------------------------------------------------------------------------
abinit.ng2qpt:

Description:
 Equivalent to Abinit's (anaddb) ng2qpt input variable: Defines the number of
 q-point perturbations in each direction of the finer grid for density
 functional perturbation theory (DFPT) simulations. Please refer to the
 Abinit manual for further details.

Format:
abinit.ng2qpt {
 Integer Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
abinit.ngqpt:

Description:
 Equivalent to Abinit's ngqpt input variable: Defines the number of q-point
 perturbations in each direction of the grid for density functional
 perturbation theory (DFPT) simulations, and is that equivalent to the general
 "nqpoints" Corvus input variable. Please refer to the Abinit manual for
 further details.

 NOTE: This code-specific input variable will be replaced by the general
 "nqpoints" variable in the future.

Format:
abinit.ngqpt {
 Integer Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
abinit.verbatim:

Description:
 The content of this input variable is passed as is (i. e. "verbatim") into the
 input of all Abinit calculations, and it is meant to help with any Abinit
 input that is currently not implemented in Corvus. Thus, it should be used
 carfully to avoid inconsistencies with the automatically generated input.
 Users should refed to the Abinit manual for information on this extra input.

Format:
abinit.verbatim {
 Pass
}

Default:
None

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

                          Feff Handler Input Variables                          
--------------------------------------------------------------------------------
feff.MPI.ARGS:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.MPI.ARGS {
 String ...
}

Default:
None

--------------------------------------------------------------------------------
feff.MPI.CMD:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.MPI.CMD {
 String
}

Default:
None

--------------------------------------------------------------------------------
feff.absolute:

Description:
 feff.absolue{ UseAbsoluteUnits }
 Print spectrum in absolute units instead of normalizing.

Format:
feff.absolute {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.afolp:

Description:
 feff.afolp{ folpx }
 Set maximum overlap for automatic overlap search.
 folpx - maximum overlap allowed.

Format:
feff.afolp {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.atoms:

Description:

 feff.atoms
 {
 x1  y1  z1 ipot1
 x2  y2  z2 ipot2
 .
 .
 .

 Specify atomic positions in cartesian coordinates (in Angstroms) and
 unique potential indices of each atom in the cluster, one atom per line.

Format:
feff.atoms {
 Float Float Float Integer
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.cfaverage:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.cfaverage {
 Integer Integer Float
}

Default:
None

--------------------------------------------------------------------------------
feff.cgrid:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.cgrid {
 Float Integer Integer Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.chbroad:

Description:
 feff.chbroad{ ichbroad }
 Set method of calculating core-hole lifetime broadening.
 ichbroad -
            0: Calculate Green's function at energy with imaginary part equal
               to Gamma_CH/2.
            1: Convolve final spectrum with Lorenzian of full width at
               half-max Gamma_ch.

Format:
feff.chbroad {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.chsh:

Description:
 feff.chsh{ ich }
 Correct chemical shift.
 ich = 0 or 1.

Format:
feff.chsh {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.chwidth:

Description:
 feff.chwidth{ gamma_ch }
 Set core-hole width instead of using FEFF's internal table of widths.

Format:
feff.chwidth {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.cif:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.cif {
 String
}

Default:
None

--------------------------------------------------------------------------------
feff.compton:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.compton {
 Float Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.config:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.config {
 String
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.control:

Description:

 feff.control{ ipot ixsph ifms ipaths igenfmt iff2x }

 feff.control lets you run one or more of the feff program modules
 separately. There is a switch for each of six parts of feff:
 0 means not to run that module, 1 means to run it.

Format:
feff.control {
 Integer Integer Integer Integer Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.coordinates:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.coordinates {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.corehole:

Description:
 feff.corehole{ CoreHoleApproximation }
 Set method for calculating corehole interaction.
 CoreHoleApproximation -
                         None: Do not use a corehole.
                         FSR : Final-state rule
                         RPA : Use RPA dielectric function to calculate
                               screening of core-hole.

Format:
feff.corehole {
 String
}

Default:
None

--------------------------------------------------------------------------------
feff.corrections:

Description:
 feff.corrections{ vrcorr vicorr }
 Correct the Fermi cutoff and broadening in the final spectrum calculation.
 vrcorr - Shift Fermi cutoff by -vrcorr. 
 vicorr - Add extra Lorenzian broadening with half width at half max of vicorr.

Format:
feff.corrections {
 Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.corval:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.corval {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.criteria:

Description:
 feff.criteria{ critcw critpw }
 Cutoff criteria for the path expansion filtering. 
 critcw - tolerance for curved wave expansion
 critpw - tolerance for initial plane wave approximation

Format:
feff.criteria {
 Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.crpa:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.crpa {
 Integer Float
}

Default:
None

--------------------------------------------------------------------------------
feff.danes:

Description:
 feff.danes{ xkmax xkstep estep }
 Calculate diffraction anomalous near edge structure.
 xkmax  - calculate up to k = xkmax
 xkstep - use steps of size xkstep
 estep  - near the edge, use steps calculated from estep

Format:
feff.danes {
 Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.debye:

Description:
 feff.debye{ Temperature Debye-Temperature idwopt }
 Set temperature and Debye temperature for calculations of EXAFS Debye-Waller
 factors.
   idwopt - set method for calculating DW factors. 
 NOTE: This input variable is not fully implemented yet.

Format:
feff.debye {
 String
}

Default:
None

--------------------------------------------------------------------------------
feff.density:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.density {
 String String String

 Float Float Float

 Integer Integer Integer

 Float Float Float
 Float Float Float
 Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.dims:

Description:
 feff.dims{ nmax lmax }
 Set maximum dimensions for fms calculations.
 nmax - maximum number of atoms in fms matrix.
 lmax - maximum angular momentum of fms matrix.

Format:
feff.dims {
 Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.dmdw:

Description:
 NOTE: This input variable is not fully implemented yet.

Format:
feff.dmdw {
 String Integer Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.edge:

Description:
 feff.edge{ edgeLabel }
 Set edge to calculate for XAS, XES, EELS, and other related spectra.

Format:
feff.edge {
 String ...
}

Default:
None

--------------------------------------------------------------------------------
feff.egapse:

Description:
 feff.egapse{ egap }
 Use this gap energy when applying the many-pole self-energy.

Format:
feff.egapse {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.egrid:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.egrid {
 String String Float Float
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.ellipticity:

Description:
 feff.ellipticity{ elpty x y z }
 Set the ellipticity of the x-rays.
 This card is used with the feff.polarization. 
   elpty   - ratio of amplitudes of electric field in the two orthogonal
             directions of elliptically polarized light. Only the absolute
             value of the ratio is important for nonmagnetic materials. The
             present code can distinguish left- and right-circular polarization
             only with the feff.xmcd or feff.xncd. A zero value of the
             ellipticity corresponds to linear polarization, and unity to
             circular polarization. The default value is zero.
   x, y, z - coordinates of any nonzero vector in the direction of the
             incident beam. This vector should be approximately normal to the
             polarization vector

Format:
feff.ellipticity {
 Float Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.elnes:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.elnes {
 Float Float Float
 String
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.eps0:

Description:
 feff.eps0{ eps0 }
 Set dielectric constant used for many-pole self-energy calculations.

Format:
feff.eps0 {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.equivalence:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.equivalence {
 String
}

Default:
None

--------------------------------------------------------------------------------
feff.exafs:

Description:
 feff.exafs{ xkmax xkstep }
 Calculate EXAFS spectrum.
 xkmax  - calculate spectrum up to k = xkmax
 xkstep - calculate in steps of xkstep

Format:
feff.exafs {
 Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.exchange:

Description:
 feff.exchange{ iexc vr vi iexc0 }
 Use feff.exchange to change the self-energy used in x-ray absorption
 calculations. ixc is an index specifying the potential model to use for the
 fine structure, and the optional ixc0 is the index of the model to use for
 the background function. The calculated potential can be corrected by adding
 a constant shift to the Fermi level given by vr0 and to a pure imaginary
 "optical" potential (i.e., uniform decay) given by vi0. Typical errors in
 Feff's self-consistent Fermi level estimate are about 1 eV.
 (The feff.corrections input is similar but allows the user to make small
 changes in vi0 and vr0 after the rest of the calculation is completed, for
 example in a fitting process.)

 Indices for the available exchange models:
   0 Hedin-Lundqvist + a constant imaginary part
   1 Dirac-Hara + a constant imaginary part
   2 ground state + a constant imaginary part
   3 Dirac-Hara + HL imag part + a constant imaginary part
   5 Partially nonlocal: Dirac-Fock for core + HL for valence electrons + a
     constant imaginary part

Format:
feff.exchange {
 Integer Float Float Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.exelfs:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.exelfs {
 Float
 String
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.extpot:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.extpot {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.fms:

Description:
 feff.fms{ rfms lfms2 minv toler1 toler2 rdirec }
 Use full multiple-scattering.
 rfms   - radius of cluster to use for fms calculation.
 lfms1  - 0 for solids, 1 for molecules
 minv   - set algorithm for matrix inversion
          0: LU decomposition
          2: Lanczos
          3: Broyden (less reliable)
 toler1 - tolerance to stop recursion and Broyden algorithm
 toler2 - sets the matrix element of the Gt matrix to zero if its value is
          less than toler2
 rdirec - sets the matrix element of the Gt matrix to zero if the distance
          between atoms is larger than rdirec

Format:
feff.fms {
 Float Integer Integer Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.folp:

Description:
 feff.folp{ ipot overlap }
 Set the overlap for unique potential ipot.

Format:
feff.folp {
 Integer Float
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.fprime:

Description:
 feff.fprime{ emin emax estep }
 emin  - minimum energy of calculation.
 emax  - maximum energy of calculation
 estep - energy step of calculation
 Calculate atomic scattering factor f'

Format:
feff.fprime {
 Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.fullspectrum:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.fullspectrum {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.hole:

Description:
 DEPRECATED: Use feff.edge instead.

 Specify the edge using the hole number ihole, e.g., 
 K-edge : ihole = 1
 L1-edge: ihole = 2
 s02 specifies the EXAFS amplitude reduction factor, and should be set to 1.

Format:
feff.hole {
 Integer Float
}

Default:
None

--------------------------------------------------------------------------------
feff.hubbard:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.hubbard {
 Float Float Float Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.interstitial:

Description:
 feff.interstitial{ inters vtot }
 The construction of the interstitial potential and density may be changed by
 using this card. inters = 1 might be useful when only the surroundings of the
 absorbing atom are specified in 'feff.inp'. inters defines how to find the
 interstitial potential.
    inters=0: The interstitial potential is found by averaging over the
              entire extended cluster in 'feff.inp'. (Default)
    inters=1: the interstitial potential is found locally around the
              absorbing atom.
    vtot:     the volume per atom normalized by ratmin3
              (vtot=(volume per atom)/ratmin3), where ratmin is the shortest
              bond for the absorbing atom. This quantity defines the total
              volume (needed to calculate the interstitial density) of the
              extended cluster specified in 'feff.inp'. If vtot <= 0 then the
              total volume is calculated as a sum of Norman sphere volumes.
              Otherwise, total volume = nat * (vtot * ratmin3), where nat is
              the number of atoms in an extended cluster.

Format:
feff.interstitial {
 Integer Float
}

Default:
None

--------------------------------------------------------------------------------
feff.ion:

Description:
 feff.ion{ ipot ionization }
 feff.ion ionizes all atoms with unique potential index ipot.
 NOTE: This input variable is not fully implemented yet.

Format:
feff.ion {
 Integer Float
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.iorder:

Description:
 feff.iorder{ iorder }
 Set order of approximation when calculating effective scattering matrices.

Format:
feff.iorder {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.jumprm:

Description:
 feff.jumprm{ UseRemoveJump }
 If true, smooth the jump between muffin tin potentials and interstitial.

Format:
feff.jumprm {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.kmesh:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.kmesh {
 Integer ...
}

Default:
None

--------------------------------------------------------------------------------
feff.lattice:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.lattice {
 String
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.ldec:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.ldec {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.ldos:

Description:
 feff.ldos{ emin emax broadening npoints }
 Run angular momentum project density of states calculations.
 emin       - minimum energy of energy grid.
 emax       - maximum energy of energy grid.
 broadening - Lorenzian broadening to use in calculation.
 npoints    - number of energy points in grid.

Format:
feff.ldos {
 Float Float Float Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.lfms1:

Description:
 set maximum angular momentum to use in potentials

Format:
feff.lfms1 {
 Integer
}

Default:
feff.lfms1 {
-1
}

--------------------------------------------------------------------------------
feff.lfms2:

Description:
 set maximum angular momentum to use in FMS

Format:
feff.lfms2 {
 Integer
}

Default:
feff.lfms2 {
-1
}

--------------------------------------------------------------------------------
feff.ljmax:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.ljmax {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.magic:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.magic {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.mbconv:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.mbconv {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.mpse:

Description:
 feff.mpse{ ipl npl }
 Use many-pole model self-energy. This requires the loss function, which can
 be provided externally, or approximated using feff.opcons.
   ipl - Set method for self-energy inclusion:
          1: use an "average" self-energy which is applied to the whole
             system (default). 
          2: use a density dependendent self-energy which is
             different at every point inside the muffin-tin radius.

Format:
feff.mpse {
 Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.multipole:

Description:
 feff.multipole{ le2 l2lp }
 Set multipole expansion approximation. Specifies which multipole transitions
 to include in the calculations. The options are: only dipole (le2 = 0,
 default), dipole and magnetic dipole (le2 = 1), dipole and quadrupole
 (le2 = 2). This cannot be used with NRIXS and is not supported with EXELFS
 and ELNES. The additional field l2lp can be used to calculate individual
 dipolar contributions coming from L -> L + 1 (l2lp = 1) and from L -> L - 1
 (l2lp = -1). Notice that in polarization dependent data there is also a
 cross term, which is calculated only when l2lp = 0

Format:
feff.multipole {
 Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.nleg:

Description:
 feff.nleg{ nleg }
 Set maximum number of legs to use in path expansion. A Single scattering
 path has 2 legs.

Format:
feff.nleg {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.nohole:

Description:
 feffnohole{ UseNoHole }
 Do not use a hole in the calculation.
 DEPRECATED - Use feff.corehole instead.

Format:
feff.nohole {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.nrixs:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.nrixs {
 Integer
 Float ...
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.nstar:

Description:
 feff.nstar{ WriteNStar }
 Write nstar.dat with effective coordination number N*.

Format:
feff.nstar {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.numdens:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.numdens {
 Integer Float
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.overlap:

Description:
 feff.overlap can be used to construct approximate overlapped atom potentials
 when atomic coordinates are not known or specified. 
 NOTE: This input variable is not fully implemented yet.

Format:
feff.overlap {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.pcriteria:

Description:
 feff.pcriteria{ pcritk pcrith }
 Set criteria for filtering in pathfinder. The keep-criterion pcritk looks at
 the amplitude of chi (in the plane wave approximation) for the current path
 and compares it to a single scattering path of the same effective length.
 To set this value, consider the maximum degeneracy you expect and divide
 your plane wave criterion by this number. For example, in fcc Cu, typical
 degeneracies are 196 for paths with large r, and the minimum degeneracy is 6.
 So a keep criterion of 0.08% is appropriate for a pw criteria of 2.5%. The
 heap-criterion pcrith filters paths as the pathfinder puts all paths into a
 heap (a partially ordered data structure), then removes them in order of
 increasing total path length. Each path that is removed from the heap is
 modified and then considered again as part of the search algorithm. The heap
 filter is used to decide if a path has enough amplitude in it to be worth
 further consideration. If a path can be eliminated at this point, entire
 trees of derivative paths can be neglected, leading to enormous time savings.
 This test does not come into play until paths with at least 4 legs are being
 considered, so single scattering and triangular (2 and 3 legged) paths will
 always pass this test. Because only a small part of a path is used for
 this criterion, it is difficult to predict what appropriate values will be.

Format:
feff.pcriteria {
 Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.pmbse:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.pmbse {
 Integer Integer Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.polarization:

Description:
 feff.polarization{ x y z }
 Set polarization vector of x-rays in cartesian coordinates of input file.

Format:
feff.polarization {
 Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.potentials:

Description:
 feff.potentials{
   ipot iz pot_label lfms1 lfms2 stoichiometry
   ...
 }
 Set unique potentials for FEFF calculation.

Format:
feff.potentials {
 Integer Integer String Integer Integer Float
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.preps:

Description:
 feff.preps{ PrintEpsilon }
 Print dielectric function as calculated by feff.opcons.

Format:
feff.preps {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.print:

Description:
 feff.pring{ ipr_pot ipr_xsph ipr_fms ipr_path ipr_genfmt ipr_ff2x }
 Set print level for each module of FEFF:
   pot: 
     0 write 'pot.bin' only
     1 add 'misc.dat'
     2 add 'potNN.dat'
     3 add 'atomNN.dat'
 
   xsph:
     0 write 'phase.bin' and 'xsect.bin' only
     1 add 'axafs.dat' and 'phase.dat'
     2 add 'phaseNN.dat' and 'phminNN.dat'
     3 add 'ratio.dat' (for XMCD normalization) and 'emesh.dat'.
 
   fms:
     0 write 'gg.bin'
     1 write 'gg.dat'
 
   path:
     0 write 'paths.dat' only
     1 add 'crit.dat'
     3 add 'fbeta' files (plane wave |f(\beta)| approximations)
     5 Write only 'crit.dat' and do not write 'paths.dat'. (This is useful
       genfmt 0 write 'list.dat', and write 'feff.bin' with all paths with
       importance greater than or equal to two thirds of the curved wave
       importance criterion

   genfmt:
     0 write 'list.dat', and write 'feff.bin' with all paths with importance
       greater than or equal to two thirds of the curved wave importance
       criterion
     1 write all paths to 'feff.bin'
 
   ff2x:
     0 write 'chi.dat' and 'xmu.dat'
     2 add 'chipNNNN.dat' (chi(k) for each path individually)
     3 add 'feffNNNN.dat' and 'files.dat', and do not add 'chipNNNN.dat'
       files

Format:
feff.print {
 Integer Integer Integer Integer Integer Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.rconv:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.rconv {
 Float String
}

Default:
None

--------------------------------------------------------------------------------
feff.real:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.real {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.reciprocal:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.reciprocal {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.restart:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.restart {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.rgrid:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.rgrid {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.rhozzp:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.rhozzp {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.rixs:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.rixs {
 Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.rlprint:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.rlprint {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.rmultiplier:

Description:
 feff.rmultiplyer{ rmult }
 Multiply coordinates of all atoms by rmult, expanding or contracting the
 system.

Format:
feff.rmultiplier {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.rpath:

Description:
 feff.rpath{ rmax }
 Set maximum path length for path expansion calculations of EXAFS, EXELFS,
 DAFS, etc.

Format:
feff.rpath {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.rphases:

Description:
 feff.rphases{ UseRealPhases }
 Set real phase shift approximation.
 UseRealPhases - use real phase shift if true.

Format:
feff.rphases {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.rsigma:

Description:
 feff.rsigma{ UseRealSelfEnergy }
 If true use only real part of self-energy.

Format:
feff.rsigma {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.s02:

Description:
 feff.s02{ s02 }
 Set EXAFS amplitude reduction factor.

Format:
feff.s02 {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.scf:

Description:
 feff.scf{ rfms1 lfms1 nscmt ca nmix }
 Use self-consistent field calculation of potentials.
   rfms1 - radius of cluster to use for scf calculations.
   lfms1 - 0 for solids, 1 for molecules
   nscmt - maximum number of iterations in SCF calculation.
   ca    - convergence factor for Broyden algorithm
   nmix  - number of initial iterations of mixing algorithm to use.

Format:
feff.scf {
 Float Integer Integer Float Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.screen:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.screen {
 String String
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.scxc:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.scxc {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.self:

Description:
 feff.self{ PrintSelfEnergy }
 Print out quasiparticle self-energy calculated during spectral-function
 convolution calculations.

Format:
feff.self {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.setedge:

Description:
 feff.setedge{ UseEdgeTable }
 Use table of experimental edge energies.

Format:
feff.setedge {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.sfconv:

Description:
 feff.sfconv{ UseSpectralFunctionConvolution }
 If true, convolve spectrum with spectral function to account for
 multi-electron excitations.

Format:
feff.sfconv {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.sfse:

Description:
 feff.sfse{ k }
 Print out off shell self-energy Sigma(k,E) calculated during
 spectral-function convolution calculations.

Format:
feff.sfse {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.sgroup:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.sgroup {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.sig2:

Description:
 feff.sig2{ sig2 }
 Set a single Debye-Waller factor for all paths, exp{-2*sig2*k**2}.

Format:
feff.sig2 {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.sig3:

Description:
 feff.sig3{ alphat thetae }
 Set first and third cumulants for single scattering paths:
   alphat - first cumulant
   thetae - third cumulant

Format:
feff.sig3 {
 Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.siggk:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.siggk {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.spin:

Description:
 feff.spin{ ispin sx sy sz }
 Specify the type of spin-dependent calculation for spin along the (x, y, z) 
 direction, along the z-axis by default. The SPIN card is required for the
 calculation of all spin-dependent effects, including XMCD and SPXAS.
   ispin:
      2 spin-up SPXAS and LDOS
     -2 spin-down SPXAS and LDOS
      1 spin-up portion of XMCD calculations
     -1 spin-down portion of XMCD calculations

Format:
feff.spin {
 Integer Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.ss:

Description:
 NOTE: This input variable is not fully implemented yet.

Format:
feff.ss {
 Integer Integer Float Float
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.strfac:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.strfac {
 Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.symmetry:

Description:
 feff.symmetry{ UseSymmetry }
 If false, turn off symmetry considerations in path expansion.

Format:
feff.symmetry {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.target:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.target {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.tdlda:

Description:
 feff.tdlda{ ifxc }
 Use TDLDA to calculate x-ray absorption spectrum.
 ifxc - set algorithm for tdlda approximation
        0: use static approximation for screening of the x-ray field
        1: use approximate dynamic screening of x-ray field and core-hole.

Format:
feff.tdlda {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.temperature:

Description:
No description available for this variable
Please review the equivalent variable in the Feff manual

Format:
feff.temperature {
 Float Integer
}

Default:
None

--------------------------------------------------------------------------------
feff.title:

Description:
 Set title for this feff calculation.

Format:
feff.title {
 String ...
 ...
}

Default:
None

--------------------------------------------------------------------------------
feff.unfreezef:

Description:
 feff.unreezef{ UnfreezeFOrbitals }
 If true, allow f-orbitals to relax during SCF calculation.

Format:
feff.unfreezef {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
feff.xanes:

Description:
 feff.xanes{ xkmax }
 Calculate XANES spectrum.
   xkmax - calculate up to k = xkmax

Format:
feff.xanes {
 Float
}

Default:
None

--------------------------------------------------------------------------------
feff.xes:

Description:
 feff.xes{ emin emax estep }
 Calculate x-ray emission spectrum.
   emin  - minimum energy of calculation.
   emax  - maximum energy of calculation
   estep - energy step of calculation

Format:
feff.xes {
 Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
feff.xmcd:

Description:
 feff.xmcd{ xkmax xkstep estep }
 Caluclate x-ray magnetic (or natural) circular dichroism
   xkmax  - calculate up to k = xkmax
   xkstep - use steps of size xkstep
   estep  - near the edge, use steps calculated from estep

Format:
feff.xmcd {
 Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

                         Nwchem Handler Input Variables                         
--------------------------------------------------------------------------------
nwchem.basis:

Description:
 Set the Gaussian basis set to be used in the NWChem calculations. The format
 is the same as in NWChem:

 <Atom label> <Basis set name>
  .
  .

 Please refer to the NWChem manual for further details.

Format:
nwchem.basis {
 String ...
 ...
}

Default:
None

--------------------------------------------------------------------------------
nwchem.charge:

Description:
 Set the net charge of the system for an NWChem DFT simulation.
 NOTE: This input variable will be superseded in the future by the more
 general "charge" variable.

 Please refer to the NWChem manual for further details.

Format:
nwchem.charge {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.iter:

Description:
No description available for this variable
Please review the equivalent variable in the Nwchem manual

Format:
nwchem.iter {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.mult:

Description:
 Set the multiplicity of the system for an NWChem DFT simulation.
 NOTE: This input variable will be superseded in the future by the more
 general "multiplicity" variable.

 Please refer to the NWChem manual for further details.

Format:
nwchem.mult {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.qmd.dt_nucl:

Description:
 Set the time step for nuclear motion in a quantum MD simulation.

 Please refer to the NWChem manual for further details.

Format:
nwchem.qmd.dt_nucl {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.qmd.nstep_nucl:

Description:
 Set the number of nuclear motion steps in a quantum MD simulation.

 Please refer to the NWChem manual for further details.

Format:
nwchem.qmd.nstep_nucl {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.qmd.print_xyz:

Description:
 Toggle printing of xyz coordinates in a quantum MD simulation.

 Please refer to the NWChem manual for further details.

Format:
nwchem.qmd.print_xyz {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.qmd.snapstep:

Description:
No description available for this variable
Please review the equivalent variable in the Nwchem manual

Format:
nwchem.qmd.snapstep {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.qmd.targ_temp:

Description:
 Set the target temperature in a quantum MD simulation.

 Please refer to the NWChem manual for further details.

Format:
nwchem.qmd.targ_temp {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.qmd.thermostat:

Description:
 Set the thermostat type to be used in a quantum MD simulation.

 Please refer to the NWChem manual for further details.

Format:
nwchem.qmd.thermostat {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.xas.alpha:

Description:
No description available for this variable
Please review the equivalent variable in the Nwchem manual

Format:
nwchem.xas.alpha {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.xas.nroots:

Description:
No description available for this variable
Please review the equivalent variable in the Nwchem manual

Format:
nwchem.xas.nroots {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.xas.vec:

Description:
No description available for this variable
Please review the equivalent variable in the Nwchem manual

Format:
nwchem.xas.vec {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.xas.xrayenergywin:

Description:
No description available for this variable
Please review the equivalent variable in the Nwchem manual

Format:
nwchem.xas.xrayenergywin {
 Float Float
}

Default:
None

--------------------------------------------------------------------------------
nwchem.xaselem:

Description:
No description available for this variable
Please review the equivalent variable in the Nwchem manual

Format:
nwchem.xaselem {
 String
}

Default:
None

--------------------------------------------------------------------------------
nwchem.xc:

Description:
 Set the exchange correlation potential for an NWChem DFT simulation.
 NOTE: This input variable will be superseded in the future by the more
 general "xc" variable.

 Please refer to the NWChem manual for further details.

Format:
nwchem.xc {
 String
}

Default:
None

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

                          Orca Handler Input Variables                          
--------------------------------------------------------------------------------
orca.basis.basis:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.basis.basis {
 String
}

Default:
orca.basis.basis {
def2-TZVP
}

--------------------------------------------------------------------------------
orca.basis.decontract:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.basis.decontract {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.ci:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.ci {
 Boolean
}

Default:
orca.ci {
F
}

--------------------------------------------------------------------------------
orca.citype:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.citype {
 String
}

Default:
orca.citype {
CCSD
}

--------------------------------------------------------------------------------
orca.coords.units:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.coords.units {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.cpcm:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.cpcm {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.expert:

Description:
 Use verbatim expert setting for orca.

Format:
orca.expert {
 String ...
 ...
}

Default:
None

--------------------------------------------------------------------------------
orca.geom.optimizationquality:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.geom.optimizationquality {
 String
}

Default:
orca.geom.optimizationquality {
TIGHTOPT
}

--------------------------------------------------------------------------------
orca.method.allowrhf:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.method.allowrhf {
 Boolean
}

Default:
orca.method.allowrhf {
F
}

--------------------------------------------------------------------------------
orca.method.amass:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.method.amass {
 String
}

Default:
orca.method.amass {
Mass2016
}

--------------------------------------------------------------------------------
orca.method.frozencore:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.method.frozencore {
 Boolean
}

Default:
orca.method.frozencore {
F
}

--------------------------------------------------------------------------------
orca.method.grid:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.method.grid {
 String
}

Default:
orca.method.grid {
GRID4
}

--------------------------------------------------------------------------------
orca.method.gridx:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.method.gridx {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.method.method:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.method.method {
 String
}

Default:
orca.method.method {
B3LYP
}

--------------------------------------------------------------------------------
orca.method.ri:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.method.ri {
 Boolean
}

Default:
orca.method.ri {
F
}

--------------------------------------------------------------------------------
orca.method.runtype:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.method.runtype {
 String
}

Default:
orca.method.runtype {
OPT
}

--------------------------------------------------------------------------------
orca.method.usesymm:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.method.usesymm {
 Boolean
}

Default:
orca.method.usesymm {
F
}

--------------------------------------------------------------------------------
orca.mp2:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.mp2 {
 Boolean
}

Default:
orca.mp2 {
F
}

--------------------------------------------------------------------------------
orca.mp2type:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.mp2type {
 String
}

Default:
orca.mp2type {
MP2
}

--------------------------------------------------------------------------------
orca.output.pdbfile:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.output.pdbfile {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.output.print:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.output.print {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.output.printlevel:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.output.printlevel {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.output.xyzfile:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.output.xyzfile {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.rel.method:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.rel.method {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.rel.soctype:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.rel.soctype {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.autostart:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.autostart {
 Boolean
}

Default:
orca.scf.autostart {
T
}

--------------------------------------------------------------------------------
orca.scf.cnvdamp:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.cnvdamp {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.cnvshift:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.cnvshift {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.convergence:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.convergence {
 String
}

Default:
orca.scf.convergence {
NORMALSCF
}

--------------------------------------------------------------------------------
orca.scf.convergencestrategy:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.convergencestrategy {
 String
}

Default:
orca.scf.convergencestrategy {
NormalConv
}

--------------------------------------------------------------------------------
orca.scf.diis:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.diis {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.fracocc:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.fracocc {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.guess:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.guess {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.hftyp:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.hftyp {
 String
}

Default:
orca.scf.hftyp {
RHF
}

--------------------------------------------------------------------------------
orca.scf.jmatrix:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.jmatrix {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.kdiis:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.kdiis {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.keepdens:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.keepdens {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.keepints:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.keepints {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.kmatrix:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.kmatrix {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.maxiter:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.maxiter {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.nr:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.nr {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.readints:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.readints {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.scfmode:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.scfmode {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.smeartemp:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.smeartemp {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.soscf:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.soscf {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.uno:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.uno {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.usecheapints:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.usecheapints {
 Boolean
}

Default:
None

--------------------------------------------------------------------------------
orca.scf.valformat:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.scf.valformat {
 String
}

Default:
None

--------------------------------------------------------------------------------
orca.tole:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.tole {
 Float
}

Default:
None

--------------------------------------------------------------------------------
orca.tolmaxg:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.tolmaxg {
 Float
}

Default:
None

--------------------------------------------------------------------------------
orca.tolrmaxd:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.tolrmaxd {
 Float
}

Default:
None

--------------------------------------------------------------------------------
orca.tolrmsd:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.tolrmsd {
 Float
}

Default:
None

--------------------------------------------------------------------------------
orca.tolrmsg:

Description:
No description available for this variable
Please review the equivalent variable in the Orca manual

Format:
orca.tolrmsg {
 Float
}

Default:
None

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

                        PyMatGen Handler Input Variables                        
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

                         Siesta Handler Input Variables                         
--------------------------------------------------------------------------------
siesta.AtomicCoordinatesFormat:

Description:
 Specify units and format of atomic coordinates.
 Borh            - cartesian in Bohr.
 Ang             - cartesian in Angstrom.
 ScaledCartesian - cartesian scaled by lattice constant.
 Fractional      - coordinates are given in units of the lattice vectors.

Format:
siesta.AtomicCoordinatesFormat {
 String
}

Default:
siesta.AtomicCoordinatesFormat {
Fractional
}

--------------------------------------------------------------------------------
siesta.Beta.Broadening:

Description:
No description available for this variable
Please review the equivalent variable in the Siesta manual

Format:
siesta.Beta.Broadening {
 Float
}

Default:
siesta.Beta.Broadening {
0.1
}

--------------------------------------------------------------------------------
siesta.Block.AtomicCoordinatesAndAtomicSpecies:

Description:
 Specify coordinates of each atom as well as the species index.
 x1 y1 z1 SpeciesIndex1
 x2 y2 z2 SpeciesIndex2
 ...

Format:
siesta.Block.AtomicCoordinatesAndAtomicSpecies {
 Float Float Float Integer
 ...
}

Default:
None

--------------------------------------------------------------------------------
siesta.Block.ChemicalSpeciesLabel:

Description:
 Indicate the different chemical species in the unit cell.
 Format:
 SpeciesIndex1 AtomicNumber1 AtomicSymbol1
 SpeciesIndex2 AtomicNumber2 AtomicSymbol2
 ...

Format:
siesta.Block.ChemicalSpeciesLabel {
 Integer Integer String
}

Default:
None

--------------------------------------------------------------------------------
siesta.Block.LatticeParameters:

Description:
 Set lattice parameters, i.e.,
 a b c alpha beta gamma

Format:
siesta.Block.LatticeParameters {
 Float Float Float Float Float Float
}

Default:
None

--------------------------------------------------------------------------------
siesta.Block.PAO.Basis:

Description:
 Set siesta basis manually

Format:
siesta.Block.PAO.Basis {
 String ...
 ...
}

Default:
None

--------------------------------------------------------------------------------
siesta.Coreresponse.Broadening:

Description:
No description available for this variable
Please review the equivalent variable in the Siesta manual

Format:
siesta.Coreresponse.Broadening {
 Float
}

Default:
siesta.Coreresponse.Broadening {
0.5
}

--------------------------------------------------------------------------------
siesta.DM.MixingWeight:

Description:
 Mixing weight for the density matrix.

Format:
siesta.DM.MixingWeight {
 Float
}

Default:
siesta.DM.MixingWeight {
0.10
}

--------------------------------------------------------------------------------
siesta.DM.NumberBroyden:

Description:
No description available for this variable
Please review the equivalent variable in the Siesta manual

Format:
siesta.DM.NumberBroyden {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
siesta.DM.NumberPulay:

Description:
 Set number of Pulay steps

Format:
siesta.DM.NumberPulay {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
siesta.DM.Tolerance:

Description:
 Convergence tolerance for elements of the density matrix

Format:
siesta.DM.Tolerance {
 Float
}

Default:
siesta.DM.Tolerance {
1.0e-4
}

--------------------------------------------------------------------------------
siesta.Diag.DivideAndConquer:

Description:
No description available for this variable
Please review the equivalent variable in the Siesta manual

Format:
siesta.Diag.DivideAndConquer {
 String
}

Default:
None

--------------------------------------------------------------------------------
siesta.ElectronicTemperature:

Description:
 Set electronic teperature used to define occupation numbers during SCF.

Format:
siesta.ElectronicTemperature {
 Float String
}

Default:
siesta.ElectronicTemperature {
1.0 K
}

--------------------------------------------------------------------------------
siesta.LatticeConstant:

Description:
 Set an overall multiplicative constant for the lattice parameters.

Format:
siesta.LatticeConstant {
 Float String
}

Default:
None

--------------------------------------------------------------------------------
siesta.LongOutput:

Description:
 Output lots of info.

Format:
siesta.LongOutput {
 Boolean
}

Default:
siesta.LongOutput {
T
}

--------------------------------------------------------------------------------
siesta.MPI.ARGS:

Description:
No description available for this variable
Please review the equivalent variable in the Siesta manual

Format:
siesta.MPI.ARGS {
 String ...
}

Default:
None

--------------------------------------------------------------------------------
siesta.MPI.CMD:

Description:
No description available for this variable
Please review the equivalent variable in the Siesta manual

Format:
siesta.MPI.CMD {
 String
}

Default:
None

--------------------------------------------------------------------------------
siesta.MaxSCFIterations:

Description:
 Max number of SCF iterations allowed.

Format:
siesta.MaxSCFIterations {
 Integer
}

Default:
siesta.MaxSCFIterations {
100
}

--------------------------------------------------------------------------------
siesta.MeshCutoff:

Description:
 Energy that defines the real-space grid. Point spacing scales as 1/sqrt(E_c).

Format:
siesta.MeshCutoff {
 Float String
}

Default:
siesta.MeshCutoff {
120.0 Ry
}

--------------------------------------------------------------------------------
siesta.NumberOfAtoms:

Description:
 Indicate number of atoms in unit cell.

Format:
siesta.NumberOfAtoms {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
siesta.NumberOfSpecies:

Description:
 Indicate number of species in unit cell.

Format:
siesta.NumberOfSpecies {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
siesta.PAO.BasisSize:

Description:
 Define basis size. Can be SZ, DZ, SZP, DZP.

Format:
siesta.PAO.BasisSize {
 String
}

Default:
siesta.PAO.BasisSize {
DZP
}

--------------------------------------------------------------------------------
siesta.PAO.BasisType:

Description:
 Define basis type
 split: Split-valence scheme for multiple-zeta. The split is based on different radii.
 splitgauss: Same as split but using Gaussian functions.
 nodes: Generalized PAO’s.
 nonodes: The original PAO’s are used, multiple-zeta is generated by changing the
 scale-factors, instead of using the excited orbitals.
 filteret: Use the filterets as a systematic basis set. The size of the basis set is
 controlled by the filter cut-off for the orbitals.

Format:
siesta.PAO.BasisType {
 String
}

Default:
siesta.PAO.BasisType {
split
}

--------------------------------------------------------------------------------
siesta.SolutionMethod:

Description:
 Method for solving the eigenvalue problem.

Format:
siesta.SolutionMethod {
 String
}

Default:
siesta.SolutionMethod {
diagon
}

--------------------------------------------------------------------------------
siesta.TD.CoreExcitedAtom:

Description:
 Set which atom will be the absorbing atom, i.e., which atoms the
 core-hole will be centered on

Format:
siesta.TD.CoreExcitedAtom {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
siesta.TD.CorePerturbationCharge:

Description:
 Set the core-hole charge.

Format:
siesta.TD.CorePerturbationCharge {
 Float
}

Default:
None

--------------------------------------------------------------------------------
siesta.TD.NumberOfTimeSteps:

Description:
 Specify number of time steps for RT-TDDFT run.

Format:
siesta.TD.NumberOfTimeSteps {
 Integer
}

Default:
None

--------------------------------------------------------------------------------
siesta.TD.ShapeOfEfield:

Description:
 Specify the shape of the field for the RT-TDDFT run.
 Options are:
 step     - Turn off dipole field at time 0.
 halfstep - Dipole field changes from full strength to 1/2
            strength at time 0.
 delta    - Dipole field with time dependence delta(t).
 const    - Turn on dipole field at time 0.
 sine     - Dipole field with damped sine wave time dependence,
            with optional Gaussian envelope to create quasi-harmonic
            wave packet.
 core     - turn on core-hole potential at time 0.

Format:
siesta.TD.ShapeOfEfield {
 String
}

Default:
None

--------------------------------------------------------------------------------
siesta.TD.TimeStep:

Description:
 Specify the time step for RT-TDDFT run.

Format:
siesta.TD.TimeStep {
 Float
}

Default:
None

--------------------------------------------------------------------------------